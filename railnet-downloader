#!/bin/bash

if [[ $# -eq 0 ]]; then
    echo 'Search term required, e.g. "FALTER" or "profil" (without the quotes)'
    exit 0
fi

ssid=$(iw dev | grep ssid | awk '{print $2}')
dest="$(xdg-user-dir DOWNLOAD &2> /dev/null || pwd)"

if [[ $ssid == "OEBB" ]]; then
	url="https://railnet.oebb.at/kiosk/"

	newspaper="https://railnet.oebb.at/..."
	magazines=""
else
	url="file:///$(pwd)/test/"

	newspaper="$url/zeitungen/latest.json"
	magazines=""
fi

latest=$(curl -sS $newspaper $magazines)
issue=$(jq --arg i $1 '.issues[] | select(.publicationName|match($i;"i"))' <<< $latest)

if [[ -z "$issue" ]]; then
	echo 'Newspaper or magazine not found'
	exit 0
fi

publicationName=$(jq -r '.publicationName' <<< $issue)
publicationType=$(jq -r '.publicationType' <<< $issue)
publicationDate=$(jq -r '.id.publicationDate' <<< $issue)
regionToken=$(jq -r '.id.regionToken' <<< $issue)
sourceToken=$(jq -r '.id.sourceToken' <<< $issue)

if [[ $publicationType == "ZTG" ]]; then
	publicationType="zeitungen"
else
	publicationType="magazine"
fi

issueConfiguration=$(curl -sS "$url/$publicationType/$sourceToken/issueConfiguration.json")
issueVersion=$(jq -r '.issueVersion' <<< $issueConfiguration)
baseIssueData=$(jq -r '.baseIssueData' <<< $issueConfiguration)

pages=$(curl -sS "$url/$publicationType/$sourceToken/$baseIssueData")
images=$(jq -r '.issues[].pages[].resource' <<< $pages)

mkdir -p "/tmp/$sourceToken/images"
cd $_

for image in $images; do
	curl -LOC - "$url/$publicationType/$sourceToken/$image"
done

img2pdf $images -o "$dest/${sourceToken}_${publicationDate}.pdf"

rm -rf "/tmp/$sourceToken"
cd -
